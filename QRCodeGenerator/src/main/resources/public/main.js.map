{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/qrcode/qrcode.component.ts","./src/app/qrcode/qrcode.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-app';\n}\n","<app-qrcode></app-qrcode>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { QrcodeComponent } from './qrcode/qrcode.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QrcodeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nexport class Input {\n  public id: number;\n  public info: string;\n  public url: string;\n  public emergencyNum: number;\n  public smsNum: number;\n  public smsMsg: string;\n}\n\n@Component({\n  selector: 'app-qrcode',\n  templateUrl: './qrcode.component.html',\n  styleUrls: ['./qrcode.component.css']\n})\nexport class QrcodeComponent implements OnInit {\n\n  model = new Input();\n  public imageUrl:any = null;\n\n  constructor(private http: HttpClient, private sanitizer: DomSanitizer) { }\n\n  ngOnInit(): void {\n  }\n  \n  onSubmit(form) {\n    const headers = { 'content-type': 'application/json', 'Accept': 'image/png'};\n    console.log(form.value);\n    let body = JSON.stringify(form.value);\n    console.log(body);\n\n    this.http.post('http://localhost:8080/api/genqrcode', \n                    body, \n                    {'headers':headers, \n                      'responseType':'blob'}).subscribe(\n      (response) => {\n        console.log(response);\n        //let objectURL = 'data:image/png;base64,' + response;\n        //this.imageUrl = this.sanitizer.bypassSecurityTrustUrl(objectURL);\n        this.createImageFromBlob(response);\n    },\n      (error) => console.log(error)\n    );\n    \n  }\n  \n  createImageFromBlob(image: Blob) {\n   let reader = new FileReader();\n   reader.addEventListener(\"load\", () => {\n      this.imageUrl = reader.result;\n   }, false);\n\n   if (image) {\n      reader.readAsDataURL(image);\n   }\n}\n\n}\n","<div class=\"displayForm\">\n<form #userForm=\"ngForm\" (ngSubmit)=\"onSubmit(userForm)\">\n  <table>\n  <tr>\n  <div class=\"form-group\">\n    <td class=\"firstColumn\">\n    <label>Id</label>\n    </td>\n    <td class=\"secondColumn\">\n    <input type=\"text\" class=\"form-control\" name=\"id\" [(ngModel)]=\"model.id\" required>\n    </td>\n  </div>\n  </tr>\n\n  <tr>\n  <div class=\"form-group\">\n    <td class=\"firstColumn\">\n    <label>Information</label>\n    </td>\n    <td class=\"secondColumn\">\n    <input type=\"text\" class=\"form-control\" name=\"info\" [(ngModel)]=\"model.info\">\n    </td>\n  </div>\n  </tr>\n\n  <tr>\n  <div class=\"form-group\">\n    <td class=\"firstColumn\">\n    <label>URL</label>\n    </td>\n    <td class=\"secondColumn\">\n    <input type=\"string\" class=\"form-control\" name=\"url\" [(ngModel)]=\"model.url\">\n    </td>\n  </div>\n  </tr>\n  \n  <tr>\n  <div class=\"form-group\">\n    <td class=\"firstColumn\">\n    <label>Emergency Call Number</label>\n    </td>\n    <td class=\"secondColumn\">\n    <input type=\"number\" class=\"form-control\" name=\"emergencyNum\" [(ngModel)]=\"model.emergencyNum\">\n    </td>\n  </div>\n  </tr>\n  \n  <tr>\n  <div class=\"form-group\">\n    <td class=\"firstColumn\">\n    <label>SMS Number</label>\n    </td>\n    <td class=\"secondColumn\">\n    <input type=\"number\" class=\"form-control\" name=\"smsNum\" [(ngModel)]=\"model.smsNum\">\n    </td>\n  </div>\n  </tr>\n  \n  <tr>\n  <div class=\"form-group\">\n    <td class=\"firstColumn\">\n    <label>SMS Message</label>\n    </td>\n    <td class=\"secondColumn\">\n    <input type=\"string\" class=\"form-control\" name=\"smsMsg\" [(ngModel)]=\"model.smsMsg\">\n    </td>\n  </div>\n  </tr>\n\n  <tr>\n  <div class=\"form-group\">\n    <button class=\"btn btn-danger btn-block\">Submit</button>\n  </div>\n  </tr>\n  </table>\n\n</form>\n</div>\n\n<div class=\"displayImage\">\n<img *ngIf=\"imageUrl\" class=\"preview\" [src]='imageUrl'/>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}